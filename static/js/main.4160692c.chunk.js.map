{"version":3,"sources":["redux/auth/auth-selectors.js","redux/auth/auth-operation.js","components/navigation/Navigation.styled.jsx","components/navigation/Navigation.js","components/navigation/AuthNav.js","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/UserMenu/UserMenu.styled.jsx","components/UserMenu/UserMenu.js","components/AppBar/AppBar.styled.jsx","components/AppBar/AppBar.js","views/LoginRegView.styled.jsx","views/LoginView.js","views/RegView.js","components/navigation/PrivateRoute.js","components/navigation/PublicRoute.js","views/ContactsView/ContactsView.stuled.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selector.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","views/ContactsView/ContactsView.js","views/HomeView/HomeView.styled.js","views/HomeView/HomeView.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["authSelectors","getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","getIsFetchingCurrentUser","isFetchingCurrentUser","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","console","log","message","logIn","logOut","fetchCurrentUser","_","thunkAPI","getState","persistedToken","rejectWithValue","get","authOperations","LinkStyled","styled","NavLink","Navigation","useSelector","exact","to","tiveStyle","color","activeStyle","AuthNav","Button","button","ButtonText","children","onClick","Container","div","Text","span","Name","UserMenu","dispatch","useDispatch","type","Header","header","AppBar","Title","h2","Form","form","Label","label","LoginView","useState","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","autoComplete","onChange","placeholder","RegView","setName","event","PrivatRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","Phonebook","ContactBox","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","updateFilter","contactsOperations","getContacts","addContact","number","contact","deleteContact","contactId","delete","getItems","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","trim","includes","contactsSelectors","isLoading","loading","InputName","Input","input","ContactForm","setNumber","handelChange","currentTarget","reset","some","alert","pattern","title","required","h3","Filter","ContacstList","ul","Contact","li","ContactName","ContactPhone","MessageNotFound","p","Contacts","useEffect","length","map","id","onDeleteContact","height","width","ContactsView","HomeView","App","path","createReducer","payload","item","error","combineReducers","authSlice","createSlice","initialState","extraReducers","fulfilled","action","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4160692c.chunk.js","sourcesContent":["const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nconst getIsFetchingCurrentUser = state => state.auth.isFetchingCurrentUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUserName,\r\n  getIsFetchingCurrentUser,\r\n};\r\n\r\nexport default authSelectors;\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n});\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst authOperations = {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  fetchCurrentUser,\r\n};\r\n\r\nexport default authOperations;\r\n","import { NavLink } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\nexport const LinkStyled = styled(NavLink)`\r\n  margin-right: 30px;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  color: rgb(75, 75, 75);\r\n  font-size: 20px;\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport { authSelectors } from 'redux/auth';\r\nimport { LinkStyled } from './Navigation.styled';\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <LinkStyled\r\n        exact\r\n        to=\"/\"\r\n        tiveStyle={{\r\n          color: '#5DCB98',\r\n        }}\r\n      >\r\n        Home Page\r\n      </LinkStyled>\r\n\r\n      {isLoggedIn && (\r\n        <LinkStyled\r\n          exact\r\n          to=\"contacts\"\r\n          activeStyle={{\r\n            color: '#5DCB98',\r\n          }}\r\n        >\r\n          Contacts\r\n        </LinkStyled>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { LinkStyled } from './Navigation.styled';\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <nav>\r\n      <LinkStyled\r\n        exact\r\n        to=\"/register\"\r\n        activeStyle={{\r\n          color: '#5DCB98',\r\n        }}\r\n      >\r\n        Sign up\r\n      </LinkStyled>\r\n      <LinkStyled\r\n        exact\r\n        to=\"/login\"\r\n        activeStyle={{\r\n          color: '#5DCB98',\r\n        }}\r\n      >\r\n        Sign In\r\n      </LinkStyled>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\n  height: 50px;\r\n  padding: 12px 16px;\r\n  font-size: 18px;\r\n  color: white;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: #5dcb98;\r\n  outline: none;\r\n  cursor: pointer;\r\n  border: none;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Button } from \"./Button.styled\";\r\n\r\nconst ButtonText = ({ children, onClick }) => {\r\n  return <Button onClick={onClick}>{children}</Button>;\r\n};\r\n\r\nButtonText.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ButtonText;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  margin-right: 24px;\r\n  font-weight: 500;\r\n  color: rgb(75, 75, 75);\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Name = styled.span`\r\n  color: #5dcb98;\r\n`;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from 'redux/auth';\r\nimport Button from '../Button/Button';\r\nimport { Container, Text, Name } from './UserMenu.styled';\r\n\r\nconst UserMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n\r\n  return (\r\n    <Container>\r\n      <Text>\r\n        Hello, <Name>{name}</Name>\r\n      </Text>\r\n      <Button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n        Sign out\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  min-height: 80px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  padding: 12px 32px;\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from 'components/navigation/Navigation';\r\nimport AuthNav from 'components/navigation/AuthNav';\r\nimport UserMenu from 'components/UserMenu/UserMenu';\r\nimport { authSelectors } from 'redux/auth';\r\nimport { Header } from './AppBar.styled';\r\n\r\nconst AppBar = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  return (\r\n    <Header>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  padding: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  color: #5dcb98;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 35%;\r\n  padding: 24px 32px;\r\n  background-color: rgba(67, 67, 67, 0.3);\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 24px;\r\n`;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operation';\r\nimport { Container, Title, Form, Label } from './LoginRegView.styled';\r\nimport Button from '../components/Button/Button';\r\n\r\nconst LoginView = () => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Sign in to Phonebook</Title>\r\n\r\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <Label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            placeholder=\"Email\"\r\n          />\r\n        </Label>\r\n\r\n        <Label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            placeholder=\"Password\"\r\n          />\r\n        </Label>\r\n\r\n        <Button type=\"submit\">Sign in</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operation';\r\nimport { Container, Title, Form, Label } from './LoginRegView.styled';\r\nimport Button from '../components/Button/Button';\r\n\r\nconst RegView = () => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Sign up to Phonebook</Title>\r\n\r\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <Label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            placeholder=\"Name\"\r\n          />\r\n        </Label>\r\n\r\n        <Label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            placeholder=\"Email\"\r\n          />\r\n        </Label>\r\n\r\n        <Label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            placeholder=\"Password\"\r\n          />\r\n        </Label>\r\n\r\n        <Button type=\"submit\">Sign up</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegView;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nconst PrivatRoute = ({ children, redirectTo = '/', ...routeProps }) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PrivatRoute;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Phonebook = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const ContactBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 24px;\r\n  background-color: rgba(165, 230, 250, 0.3);\r\n  width: 65%;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  color: rgb(75, 75, 75);\r\n  margin: 0;\r\n`;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contacts/getContactRequest');\r\nexport const getContactsSuccess = createAction('contacts/getContactSuccess');\r\nexport const getContactsError = createAction('contacts/getContactError');\r\n\r\nexport const addContactsRequest = createAction('contacts/addContactRequest');\r\nexport const addContactsSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactsError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactsError = createAction('contacts/deleteContactError');\r\n\r\nexport const updateFilter = createAction('contacts/UpdateFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from './contacts-actions';\r\n\r\nconst getContacts = () => async dispatch => {\r\n  dispatch(getContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(getContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  async dispatch => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(addContactsRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      dispatch(addContactsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactsError(error));\r\n    }\r\n  };\r\n\r\nconst deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactsSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactsError(error));\r\n  }\r\n};\r\n\r\nconst contactsOperations = {\r\n  getContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default contactsOperations;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getItems = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst isLoading = state => state.contacts.loading;\r\n\r\n//мемоизированный селектор\r\nconst getVisibleContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase().trim();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nconst contactsSelectors = {\r\n  getItems,\r\n  getFilter,\r\n  isLoading,\r\n  getVisibleContacts,\r\n};\r\n\r\nexport default contactsSelectors;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 35%;\r\n  padding: 24px 32px;\r\n  background-color: rgba(67, 67, 67, 0.3);\r\n\r\n  & > button {\r\n    margin-top: 40px;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const InputName = styled.span`\r\n  margin-bottom: 16px;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  height: 40px;\r\n  padding: 8px 24px;\r\n  font-size: 18px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgba(228, 228, 228, 0.5);\r\n  outline: none;\r\n  border: none;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsSelectors, contactsOperations } from \"../../redux/contacts\";\r\n\r\nimport ButtonText from \"../Button/Button\";\r\nimport { Form, Label, InputName, Input } from \"./ContactForm.styled\";\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const contact = { name, number };\r\n\r\n  const contacts = useSelector(contactsSelectors.getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handelChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    if (name === \"name\") {\r\n      setName(value);\r\n    }\r\n    if (name === \"number\") {\r\n      setNumber(value);\r\n    }\r\n  };\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      contacts.some(\r\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`${name} is alredy in the contacts list`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContact(contact));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handelSubmit}>\r\n      <Label>\r\n        <InputName>Name</InputName>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handelChange}\r\n        />\r\n      </Label>\r\n\r\n      <Label>\r\n        <InputName>Number</InputName>\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handelChange}\r\n        />\r\n      </Label>\r\n\r\n      <ButtonText type=\"submit\">Add Contact</ButtonText>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h3`\r\n  color: rgb(93 203 152);\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 400px;\r\n  /* height: 40px; */\r\n  padding: 8px 24px;\r\n  margin-bottom: 24px;\r\n  font-size: 18px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  /* background-color: rgba(228, 228, 228, 0.5); */\r\n  outline: none;\r\n  border: none;\r\n`;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { updateFilter, contactsSelectors } from '../../redux/contacts';\r\n\r\nimport { Title, Input } from './Filter.styled';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(updateFilter(e.target.value.trim()));\r\n\r\n  return (\r\n    <>\r\n      <Title>Find contact by name</Title>\r\n      <Input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContacstList = styled.ul`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 600px;\r\n`;\r\n\r\nexport const Contact = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 8px 12px;\r\n  margin-bottom: 12px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgb(93 203 152 / 20%);\r\n`;\r\n\r\nexport const ContactName = styled.span`\r\n  width: 40%;\r\n  margin-right: 12px;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const ContactPhone = styled.span`\r\n  margin-right: 12px;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const MessageNotFound = styled.p`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n","import { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport ButtonText from '../Button/Button';\r\nimport {\r\n  ContacstList,\r\n  Contact,\r\n  ContactName,\r\n  ContactPhone,\r\n  MessageNotFound,\r\n} from './Contacts.styled';\r\n\r\nconst Contacts = () => {\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const isLoading = useSelector(contactsSelectors.isLoading);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n\r\n  useEffect(() => dispatch(contactsOperations.getContacts()), [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {contacts.length > 0 ? (\r\n        <ContacstList>\r\n          {contacts.map(({ name, number, id }) => (\r\n            <Contact key={id}>\r\n              <ContactName>{name}</ContactName>\r\n              <ContactPhone>{number}</ContactPhone>\r\n              <ButtonText type=\"button\" onClick={() => onDeleteContact(id)}>\r\n                Delete\r\n              </ButtonText>\r\n            </Contact>\r\n          ))}\r\n          {isLoading && (\r\n            <Loader type=\"Oval\" color=\"#5DCB98\" height={40} width={40} />\r\n          )}\r\n        </ContacstList>\r\n      ) : (\r\n        <MessageNotFound>Contact not found</MessageNotFound>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import { Phonebook, Title, ContactBox } from './ContactsView.stuled';\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport Contacts from '../../components/Contacts/Contacts';\r\n\r\nconst ContactsView = () => {\r\n  return (\r\n    <Phonebook>\r\n      <ContactForm />\r\n      <ContactBox>\r\n        <Title>Contacts</Title>\r\n        <Filter />\r\n        <Contacts />\r\n      </ContactBox>\r\n    </Phonebook>\r\n  );\r\n};\r\n\r\nexport default ContactsView;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Text = styled.p`\r\n  font-size: 64px;\r\n  margin-top: 60px;\r\n  text-align: center;\r\n  color: rgb(93, 203, 152);\r\n`;\r\n","import { Text } from './HomeView.styled';\r\n\r\nconst HomeView = () => {\r\n  return <Text>Welcome to Phonebook!</Text>;\r\n};\r\n\r\nexport default HomeView;\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport AppBar from 'components/AppBar/AppBar';\r\nimport LoginView from './views/LoginView';\r\nimport RegView from './views/RegView';\r\nimport authOperations from 'redux/auth/auth-operation';\r\nimport PrivatRoute from 'components/navigation/PrivateRoute';\r\nimport PublicRoute from 'components/navigation/PublicRoute';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\nimport ContactsView from 'views/ContactsView/ContactsView';\r\nimport HomeView from 'views/HomeView/HomeView';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const isFetchingCurrentUser = useSelector(\r\n    authSelectors.getIsFetchingCurrentUser,\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    !isFetchingCurrentUser && (\r\n      <>\r\n        <AppBar />\r\n\r\n        <Switch>\r\n          <PublicRoute path=\"/\" exact>\r\n            <HomeView />\r\n          </PublicRoute>\r\n\r\n          <PrivatRoute path=\"/contacts\" redirectTo=\"/login\">\r\n            <ContactsView />\r\n          </PrivatRoute>\r\n\r\n          <PublicRoute path=\"/register\" restricted>\r\n            <RegView />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\r\n            <LoginView />\r\n          </PublicRoute>\r\n        </Switch>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  getContactsSuccess,\r\n  getContactsRequest,\r\n  getContactsError,\r\n  addContactsSuccess,\r\n  addContactsRequest,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  updateFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [updateFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [addContactsError]: (_, { payload }) => payload.message,\r\n  [getContactsError]: (_, { payload }) => payload.message,\r\n  [deleteContactsError]: (_, { payload }) => payload.message,\r\n  [getContactsRequest]: () => null,\r\n  [addContactsRequest]: () => null,\r\n  [deleteContactsRequest]: () => null,\r\n  [updateFilter]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operation';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport authReducer from './auth/auth-slice';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}